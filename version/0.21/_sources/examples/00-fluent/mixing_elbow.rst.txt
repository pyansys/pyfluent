
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-fluent/mixing_elbow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_00-fluent_mixing_elbow.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-fluent_mixing_elbow.py:

.. _ref_mixing_elbow_tui_api:

Watertight geometry meshing workflow
------------------------------------
This example sets up and solves a three-dimensional turbulent fluid flow
and heat transfer problem in a mixing elbow, which is common in piping
systems in power plants and process industries. Predicting the flow field
and temperature field in the area of the mixing region is important to
designing the junction properly.

This example uses the guided workflow for watertight geometry meshing
because it is appropriate for geometries that can have no imperfections,
such as gaps and leakages.

**Workflow tasks**

The watertight geometry meshing workflow guides you through these tasks:

- Import a CAD geometry
- Generate a surface mesh
- Describe the geometry
- Generate a volume mesh

**Problem description**

A cold fluid at 20 deg C flows into the pipe through a large inlet. It then mixes
with a warmer fluid at 40 deg C that enters through a smaller inlet located at
the elbow. The pipe dimensions are in inches, and the fluid properties and
boundary conditions are given in SI units. Because the Reynolds number for the
flow at the larger inlet is ``50, 800``, a turbulent flow model is required.

.. GENERATED FROM PYTHON SOURCE LINES 34-43

Example Setup
-------------
Before you can use the watertight geometry meshing workflow, you must set up the
example and initialize this workflow.

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports, which includes downloading and importing
the geometry file.

.. GENERATED FROM PYTHON SOURCE LINES 43-50

.. code-block:: Python


    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples

    pyfluent.CONTAINER_MOUNT_PATH = pyfluent.EXAMPLES_PATH
    import_file_name = examples.download_file("mixing_elbow.pmdb", "pyfluent/mixing_elbow")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Download successful. File path:
    /home/ansys/.local/share/ansys_fluent_core/examples/mixing_elbow.pmdb




.. GENERATED FROM PYTHON SOURCE LINES 52-56

Launch Fluent
~~~~~~~~~~~~~
Launch Fluent as a service in meshing mode with double precision running on
two processors.

.. GENERATED FROM PYTHON SOURCE LINES 56-64

.. code-block:: Python


    meshing = pyfluent.launch_fluent(
        precision="double",
        processor_count=2,
        mode="meshing",
    )









.. GENERATED FROM PYTHON SOURCE LINES 65-68

Initialize workflow
~~~~~~~~~~~~~~~~~~~
Initialize the watertight geometry meshing workflow.

.. GENERATED FROM PYTHON SOURCE LINES 68-72

.. code-block:: Python


    meshing.workflow.InitializeWorkflow(WorkflowType="Watertight Geometry")









.. GENERATED FROM PYTHON SOURCE LINES 73-81

Watertight geometry meshing workflow
------------------------------------
The fault-tolerant meshing workflow guides you through the several tasks that
follow.

Import CAD and set length units
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the CAD geometry and set the length units to inches.

.. GENERATED FROM PYTHON SOURCE LINES 81-93

.. code-block:: Python

    geo_import = meshing.workflow.TaskObject["Import Geometry"]
    geo_import.Arguments = {
        "FileName": import_file_name,
        "LengthUnit": "in",
    }

    # Import geometry
    # ~~~~~~~~~~~~~~~
    # Import the geometry.

    geo_import.Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Warning: PMDB file will not be saved as the same is being imported.

    Importing one geom object per program-controlled and one zone per body ...
    Initializing ANSYS component system ...
    running Ansys.Meshing.FieldMesher.exe ...
    creating FMComponent instance ...
    querying IFieldMesher interface ...
    AnsysFieldMesher build date: May 13 2024 15:08:00

    argv[0] = /ansys_inc/v242/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe
    argv[1] = -B
    argv[2] = /ansys_inc/v242/commonfiles/CPython/3_10/linx64/Release/python/../Ansys/TGrid/CADReaders.py
    argv[3] = -a
    argv[4] = /mnt/pyfluent/FM_1f800dbb1892_149/options1718804810.389129149.xml
    argv[5] = -a
    argv[6] = /mnt/pyfluent/FM_1f800dbb1892_149/options1718804810.389129149.xml
        /ansys_inc/v242/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe started by root on 1f800dbb1892 linx64 on Wed Jun 19 13:46:50 2024
        using Python 3.10.12 (main, Mar 26 2024, 02:17:48) [GCC 8.2.0]
    
        using Ansys.Meshing.FieldMesher build May 13 2024 15:04:53
    
        running ANSYS TGrid CADToTGridConverter ...
        setting up parameters ...
        setting up parameters done.
        running conversion ...
        converting 1 file(s) from Workbench to FLTG using output path '/mnt/pyfluent/FM_1f800dbb1892_149/out1718804810.389129149.tgf'
        converting file 'mixing_elbow.pmdb' (1 of 1) from Workbench to FLTG using output path '/mnt/pyfluent/FM_1f800dbb1892_149'
        importing data ...
        importing meshing model from PartMgr from file '/mnt/pyfluent/mixing_elbow.pmdb' ...
        setting enclosure and symmetry processing to False
        setting transfer named selections to True
        setting named selection prefixes to ''
        setting mixed import resolution type to 'SolidAndSurface'
        setting target application to 'FluentMeshing'
        initializing part manager from file ...
        processing assembly 'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc' with ID 1 and reference key '<?xml version="1.0" encoding="utf-16"?>
        <IdTable xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <Table>
            <Entry>
              <Text>&lt;SnippetV1 sctype="SpaceClaim.BasicMoniker`1[[SpaceClaim.IEvaluation, Core]], Core" refId="81ad9b4c-8344-484a-b3a0-56e3834b262e:2" /&gt;</Text>
              <Id>10000</Id>
              <IsExploded>false</IsExploded>
            </Entry>
          </Table>
        </IdTable>'
        length unit = [m]
        processing part 'elbow' with ID 3
        processing named selection 'Symmetry:XYPlane'
        processing named selection 'hot-inlet'
        processing named selection 'cold-inlet'
        processing named selection 'outlet'
        processing named selection 'wall-inlet'
        processing named selection 'wall-elbow'
        processing data ...
        removing named collections of entities ...
        removing named collections of entities stopped, no named collections selected.
        analyzing feature edges ...
        detecting feature edges, feature angle = 40 [deg] ...
            Data information
                Meshing model
                    Attributes:
                        'LengthUnit': '[in]'
                    Entity summary:
                        Collection: 6
                        Component : 2
                        Body      : 1
                        Shell     : 1
                        Face      : 8
                        Loop      : 8
                        Edge      : 18
                        Vertex    : 12
                        Surface   : 8
                        Curve     : 18
                    Tessellation summary:
                        Face facets  : 1250
                        Edge segments: 235
                    Bounding box:
                        (-7.874015808105469, -8.858267784118652, 0) x (7.874015808105469, 7.874015808105469, 1.96705949306488)
                    Assembly component hierarchy:
                        'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc'
                          'elbow'
                    NamedCollections:
                        'Symmetry:XYPlane'
                        'hot-inlet'
                        'cold-inlet'
                        'outlet'
                        'wall-inlet'
                        'wall-elbow'
    
    
        exporting FLTG data to file '/mnt/pyfluent/FM_1f800dbb1892_149/out1718804810.389129149.tgf' ...
        writing face-based mesh file '/mnt/pyfluent/FM_1f800dbb1892_149/out1718804810.389129149.tgf' ...
        ======== Exported Data ========
        Entity summary:
            Object       : 1
            Object region: 7
            Zone         : 15
    
        running conversion done.
        running ANSYS TGrid CADToTGridConverter done.
        ran ANSYS TGrid CADToTGridConverter in 0.073 [s]

    Reading "/mnt/pyfluent/FM_1f800dbb1892_149/out1718804810.389129149.tgf"...

    nodes: 776
    edges: 153
    faces: 1250
    cells: 0
    generating pointers...done.
    extracting boundary entities...
     776 boundary nodes.
     1250 boundary faces.
     6 boundary face zones.
    done.
    analyzing boundary connectivity...done.


    ---------------- Import of mixing_elbow, consisting of one single part/object , complete. 
 




.. GENERATED FROM PYTHON SOURCE LINES 94-98

Add local sizing
~~~~~~~~~~~~~~~~
Add local sizing. This task asks whether you want to add local sizing controls
to the faceted geometry. You can keep the default settings and execute the task.

.. GENERATED FROM PYTHON SOURCE LINES 98-102

.. code-block:: Python

    add_local_sizing = meshing.workflow.TaskObject["Add Local Sizing"]
    add_local_sizing.AddChildToTask()
    add_local_sizing.Execute()








.. GENERATED FROM PYTHON SOURCE LINES 103-107

Generate surface mesh
~~~~~~~~~~~~~~~~~~~~~
Generate the surface mash. In this task, you can set various properties of the
surface mesh for the faceted geometry. For ``"MaxSize"``, set ``0.3``.

.. GENERATED FROM PYTHON SOURCE LINES 107-111

.. code-block:: Python

    surface_mesh_gen = meshing.workflow.TaskObject["Generate the Surface Mesh"]
    surface_mesh_gen.Arguments = {"CFDSurfaceMeshControls": {"MaxSize": 0.3}}
    surface_mesh_gen.Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Writing "/mnt/pyfluent/FM_1f800dbb1892_149/TaskObject3.msh.h5" ...
    writing 1 node zones
    writing 9 edge zones 
    writing 6 face zones 
    writing node curvature data...
    done.
    Importing one mesh object per program-controlled and one zone per body ...
    Initializing ANSYS component system ...
    running Ansys.Meshing.FieldMesher.exe ...
    creating FMComponent instance ...
    querying IFieldMesher interface ...
    AnsysFieldMesher build date: May 13 2024 15:08:00

    argv[0] = /ansys_inc/v242/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe
    argv[1] = -B
    argv[2] = /ansys_inc/v242/commonfiles/CPython/3_10/linx64/Release/python/../Ansys/TGrid/CADReaders.py
    argv[3] = -a
    argv[4] = /mnt/pyfluent/FM_1f800dbb1892_149/options1718804814.33874149.xml
    argv[5] = -a
    argv[6] = /mnt/pyfluent/FM_1f800dbb1892_149/options1718804814.33874149.xml
        /ansys_inc/v242/aisol/CommonFiles/linx64/ansys.meshing.fieldmesher.exe started by root on 1f800dbb1892 linx64 on Wed Jun 19 13:46:54 2024
        using Python 3.10.12 (main, Mar 26 2024, 02:17:48) [GCC 8.2.0]
    
        using Ansys.Meshing.FieldMesher build May 13 2024 15:04:53
    
        running ANSYS TGrid CADToTGridConverter ...
        setting up parameters ...
        setting up parameters done.
        running conversion ...
        converting 1 file(s) from Workbench to FLTG using output path '/mnt/pyfluent/FM_1f800dbb1892_149/out1718804814.33874149.tgf'
        converting file 'mixing_elbow.pmdb' (1 of 1) from Workbench to FLTG using output path '/mnt/pyfluent/FM_1f800dbb1892_149'
        importing data ...
        importing meshing model from PartMgr from file '/mnt/pyfluent/mixing_elbow.pmdb' ...
        setting enclosure and symmetry processing to False
        setting transfer named selections to True
        setting named selection prefixes to ''
        setting mixed import resolution type to 'SolidAndSurface'
        setting target application to 'FluentMeshing'
        initializing part manager from file ...
        processing assembly 'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc' with ID 1 and reference key '<?xml version="1.0" encoding="utf-16"?>
        <IdTable xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <Table>
            <Entry>
              <Text>&lt;SnippetV1 sctype="SpaceClaim.BasicMoniker`1[[SpaceClaim.IEvaluation, Core]], Core" refId="81ad9b4c-8344-484a-b3a0-56e3834b262e:2" /&gt;</Text>
              <Id>10000</Id>
              <IsExploded>false</IsExploded>
            </Entry>
          </Table>
        </IdTable>'
        length unit = [m]
        processing part 'elbow' with ID 3
        processing named selection 'Symmetry:XYPlane'
        processing named selection 'hot-inlet'
        processing named selection 'cold-inlet'
        processing named selection 'outlet'
        processing named selection 'wall-inlet'
        processing named selection 'wall-elbow'
        processing data ...
        saving size function background grid to file '/mnt/pyfluent/FM_1f800dbb1892_149/mixing_elbow.sf' ...
        writing size function background grid file '/mnt/pyfluent/FM_1f800dbb1892_149/mixing_elbow.sf' ...
        Vertices already exist
        initializing size function background grid done in 0.03 [s]
        removing named collections of entities ...
        removing named collections of entities stopped, no named collections selected.
        analyzing feature edges ...
        detecting feature edges, feature angle = 40 [deg] ...
            Data information
                Meshing model
                    Attributes:
                        'LengthUnit': '[in]'
                    Entity summary:
                        Collection: 6
                        Component : 2
                        Body      : 1
                        Shell     : 1
                        Face      : 8
                        Loop      : 8
                        Edge      : 18
                        Vertex    : 12
                        Surface   : 8
                        Curve     : 18
                    Tessellation summary:
                        Face facets  : 7866
                        Edge segments: 342
                    Bounding box:
                        (-7.874015808105469, -8.858267784118652, 0) x (7.874015808105469, 7.874015808105469, 1.968503832817078)
                    Assembly component hierarchy:
                        'E:\Fluent_testing\Regressions\elbow_tui_fltg\std\elbow.scdoc'
                          'elbow'
                    NamedCollections:
                        'Symmetry:XYPlane'
                        'hot-inlet'
                        'cold-inlet'
                        'outlet'
                        'wall-inlet'
                        'wall-elbow'
    
    
        exporting FLTG data to file '/mnt/pyfluent/FM_1f800dbb1892_149/out1718804814.33874149.tgf' ...
        writing face-based mesh file '/mnt/pyfluent/FM_1f800dbb1892_149/out1718804814.33874149.tgf' ...
        ======== Exported Data ========
        Entity summary:
            Object       : 1
            Object region: 7
            Zone         : 15
    
        running conversion done.
        running ANSYS TGrid CADToTGridConverter done.
        ran ANSYS TGrid CADToTGridConverter in 0.266 [s]

    Reading "/mnt/pyfluent/FM_1f800dbb1892_149/out1718804814.33874149.tgf"...

    nodes: 4231
    edges: 300
    faces: 7866
    cells: 0
    appending mesh...
    done.
    generating pointers...done.
    extracting boundary entities...
     5007 boundary nodes.
     9116 boundary faces.
     12 boundary face zones.
    done.

    Reading "/mnt/pyfluent/FM_1f800dbb1892_149/mixing_elbow.sf"...

    ANSYS(R) TGLib(TM) 3D, revision 24.1.0
     Read 5406 vertices
    0 faces marked.

        computing regions...done


    ------------------------- --------------------- -------------------- ---------------- ----------
                         name skewed-cells (> 0.80)    averaged-skewness maximum-skewness face count
    ------------------------- --------------------- -------------------- ---------------- ----------

                  elbow-fluid                     0           0.01518732       0.42655603       7866
    ------------------------- --------------------- -------------------- ---------------- ----------
                         name skewed-cells (> 0.80)    averaged-skewness maximum-skewness face count
    ------------------------- --------------------- -------------------- ---------------- ----------

                  elbow-fluid                     0           0.01518732       0.42655603       7866

    ---------------- After Surface mesh, the model consists of 1 fluid/solid regions and 0 voids.

    ---------------- Surface Meshing of mixing_elbow complete in  0.03 minutes, with a maximum skewness of  0.43. 





.. GENERATED FROM PYTHON SOURCE LINES 112-117

Describe geometry
~~~~~~~~~~~~~~~~~
Describe the geometry. In this task, you are prompted with questions
relating to the nature of the imported geometry, which defines
the fluid region. The geometry consists of only fluid regions.

.. GENERATED FROM PYTHON SOURCE LINES 117-125

.. code-block:: Python

    describe_geo = meshing.workflow.TaskObject["Describe Geometry"]
    describe_geo.UpdateChildTasks(SetupTypeChanged=False)
    describe_geo.Arguments = {
        "SetupType": "The geometry consists of only fluid regions with no voids"
    }
    describe_geo.UpdateChildTasks(SetupTypeChanged=True)
    describe_geo.Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ---------------- Velocity-inlet zone type was automatically assigned to zones containing the string '*inlet*'.

    ---------------- Pressure-outlet zone type was automatically assigned to zones containing the string '*outlet*'.

    ---------------- Symmetry zone type was automatically assigned to zones containing the string '*symmetry*'.

    ---------------- Describe Geometry task complete in  0.00 minutes.




.. GENERATED FROM PYTHON SOURCE LINES 126-130

Update boundaries
~~~~~~~~~~~~~~~~~
Update the boundaries. Set ``"BoundaryLabelTypeList"`` to ``"wall"`` and
update the boundaries.

.. GENERATED FROM PYTHON SOURCE LINES 130-139

.. code-block:: Python

    update_boundaries = meshing.workflow.TaskObject["Update Boundaries"]
    update_boundaries.Arguments = {
        "BoundaryLabelList": ["wall-inlet"],
        "BoundaryLabelTypeList": ["wall"],
        "OldBoundaryLabelList": ["wall-inlet"],
        "OldBoundaryLabelTypeList": ["velocity-inlet"],
    }
    update_boundaries.Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ---------------- Boundary Conditions Updated




.. GENERATED FROM PYTHON SOURCE LINES 140-145

Update regions
~~~~~~~~~~~~~~
Update the regions. In this task, you can review the names and types of
the various regions that have been generated from your imported geometry and
change them as needed. You can keep the default settings.

.. GENERATED FROM PYTHON SOURCE LINES 145-148

.. code-block:: Python


    meshing.workflow.TaskObject["Update Regions"].Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ---------------- Regions Updated




.. GENERATED FROM PYTHON SOURCE LINES 149-153

Add boundary layers
~~~~~~~~~~~~~~~~~~~
Add boundary layers, which consist of setting properties for the
boundary layer mesh. You can keep the default settings.

.. GENERATED FROM PYTHON SOURCE LINES 153-163

.. code-block:: Python

    add_boundary_layers = meshing.workflow.TaskObject["Add Boundary Layers"]
    add_boundary_layers.AddChildToTask()
    add_boundary_layers.InsertCompoundChildTask()
    smooth_transition_1 = meshing.workflow.TaskObject["smooth-transition_1"]
    smooth_transition_1.Arguments = {
        "BLControlName": "smooth-transition_1",
    }
    add_boundary_layers.Arguments = {}
    smooth_transition_1.Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Created Scoped Prism: smooth-transition_1

    ---------------- Inflation control added to elbow-fluid




.. GENERATED FROM PYTHON SOURCE LINES 164-168

Generate volume mesh
~~~~~~~~~~~~~~~~~~~~
Generate the volume mesh, which consists of setting properties for the
volume mesh. Set ``"VolumeFill"`` to ``"poly-hexcore"``.

.. GENERATED FROM PYTHON SOURCE LINES 168-177

.. code-block:: Python

    volume_mesh_gen = meshing.workflow.TaskObject["Generate the Volume Mesh"]
    volume_mesh_gen.Arguments = {
        "VolumeFill": "poly-hexcore",
        "VolumeFillControls": {
            "HexMaxCellLength": 0.3,
        },
    }
    volume_mesh_gen.Execute()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Writing "/mnt/pyfluent/FM_1f800dbb1892_149/TaskObject11.msh.h5" ...
    writing 2 node zones
    writing 18 edge zones 
    writing 12 face zones 
    writing node curvature data...
    done.
    checking object "elbow-fluid"...
        skipping validating regions of mesh object "elbow-fluid"...done.
    auto meshing object elbow-fluid...

    processing scoped prisms...
        starting orientation...
    done.
        setting prism growth...done.
    done.
    Identifying Topology...

    The octree hexcore cells will be refined using local surface mesh sizes and body of influence (boi) size controls, if there are any defined.
    Generating Prisms...

    Generating initial mesh...

    Refining mesh...

    Create polyhedra ...

    delete virtual and dead zones.

    Merging zones...

    Cleaning up dead entities...


    Merging Domains...
    done.

                         name       id cells (quality < 0.05)  minimum quality cell count
    ------------------------- -------- ---------------------- ---------------- ----------
                  elbow-fluid       87                      0       0.36016649      17279

                         name       id cells (quality < 0.05)  minimum quality cell count
    ------------------------- -------- ---------------------- ---------------- ----------
              Overall Summary     none                      0       0.36016649      17279

    Total Number of Cell Zones : 1

    [Quality Measure : Orthogonal Quality]

    ---------------- Volume mesh creation completed in :  0.09 minutes

    ---------------- 17279 cells were created in :  0.09 minutes

    ---------------- The mesh has a minimum Orthogonal Quality of:  0.36 

    ---------------- The volume meshing of elbow-fluid is complete.





.. GENERATED FROM PYTHON SOURCE LINES 178-181

.. image:: /_static/mixing_elbow_011.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 183-186

Check mesh in meshing mode
~~~~~~~~~~~~~~~~~~~~~~~~~~
Check the mesh in meshing mode

.. GENERATED FROM PYTHON SOURCE LINES 186-189

.. code-block:: Python


    meshing.tui.mesh.check_mesh()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Domain extents.
      x-coordinate: min = -7.874016e+00, max = 7.874016e+00.
      y-coordinate: min = -8.858268e+00, max = 7.874016e+00.
      z-coordinate: min = 0.000000e+00, max = 1.968504e+00.
    Volume statistics.
      minimum volume: 1.756302e-05.
      maximum volume: 3.635821e-02.
        total volume: 1.526086e+02.
    Face area statistics.
       minimum face area: 6.025625e-05.
       maximum face area: 1.277353e-01.
       average face area: 2.567826e-02.
    Checking number of nodes per edge.
    Checking number of nodes per face.
    Checking number of nodes per cell.
    Checking number of faces/neighbors per cell.
    Checking cell faces/neighbors.
    Checking isolated cells.
    Checking face handedness.
    Checking periodic face pairs.
    Checking face children.
    Checking face zone boundary conditions.
    Checking for invalid node coordinates.
    Checking poly cells.
    Checking zones.
    Checking neighborhood.
    Checking modified centroid.
    Checking non-positive or too small area.
    Checking face zones thread type.




.. GENERATED FROM PYTHON SOURCE LINES 190-193

Save mesh file
~~~~~~~~~~~~~~
Save the mesh file (``mixing_elbow.msh.h5``).

.. GENERATED FROM PYTHON SOURCE LINES 193-196

.. code-block:: Python


    meshing.tui.file.write_mesh("mixing_elbow.msh.h5")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Done.Writing "mixing_elbow.msh.h5" ...
    writing 3 node zones
    writing 9 edge zones 
    writing 7 face zones 
    writing 1 cell zones 
    writing boundary layer flags
    writing node curvature data...
    done.Copying the required intermediate mesh files into mixing_elbow_workflow_files
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 197-208

Solve and postprocess
---------------------
Once you have completed the watertight geometry meshing workflow, you can
solve and postprcess the results.

Switch to solution mode
~~~~~~~~~~~~~~~~~~~~~~~
Switch to solution mode. Now that a high-quality mesh has been generated
using Fluent in meshing mode, you can switch to solver mode to complete the
setup of the simulation. Because you have just checked the mesh, set ``"yes"``
to switch to the solution mode.

.. GENERATED FROM PYTHON SOURCE LINES 208-211

.. code-block:: Python


    solver = meshing.switch_to_solver()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Preparing...

    unused zone boundary-node-19 removed

    *********************************************
    Info: Your license enables 4-way parallel execution.
    For faster simulations, please start the application with the appropriate parallel options.
    *********************************************


    Transferring mesh
            transferring nodes... done
            creating threads... done
            transferring faces... done
            transferring cells... done
            updating face to cell connectivity... done
            updating grid metrics...  done
            post mesh transfer operations... done
    done

         materials,
         interface,
         domains,
         zones,
            interior--elbow-fluid
            symmetry-xyplane
            hot-inlet
            cold-inlet
            outlet
            wall-inlet
            wall-elbow
            elbow-fluid
         surfaces,
         parallel,
    Done.
    Mesh is now scaled to meters.




.. GENERATED FROM PYTHON SOURCE LINES 212-219

Check mesh in solver mode
~~~~~~~~~~~~~~~~~~~~~~~~~
Check the mesh in solver mode. The mesh check lists the minimum and maximum
x, y, and z values from the mesh in the default SI units of meters. It also
reports a number of other mesh features that are checked. Any errors in the
mesh are reported. Ensure that the minimum volume is not negative because
Fluent cannot begin a calculation when this is the case.

.. GENERATED FROM PYTHON SOURCE LINES 219-222

.. code-block:: Python


    solver.tui.mesh.check()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


     Domain Extents:
       x-coordinate: min (m) = -2.000000e-01, max (m) = 2.000000e-01

     Domain Extents:
       y-coordinate: min (m) = -2.250000e-01, max (m) = 2.000000e-01
       x-coordinate: min (m) = -2.000000e-01, max (m) = 2.000000e-01
       y-coordinate: min (m) = -2.250000e-01, max (m) = 2.000000e-01
       z-coordinate: min (m) = 0.000000e+00, max (m) = 4.991846e-02
       z-coordinate: min (m) = 0.000000e+00, max (m) = 4.991846e-02
     Volume statistics:
       minimum volume (m3): 2.878063e-10
     Volume statistics:
       minimum volume (m3): 2.878063e-10
       maximum volume (m3): 5.958043e-07
         total volume (m3): 2.500807e-03
       maximum volume (m3): 5.958043e-07
         total volume (m3): 2.500807e-03
     Face area statistics:
       minimum face area (m2): 3.887492e-08
     Face area statistics:
       minimum face area (m2): 3.887492e-08
       maximum face area (m2): 8.240970e-05
       maximum face area (m2): 8.240970e-05
     Checking mesh.....................................
     Checking mesh.....................................
    Done.
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 223-226

Enable heat transfer
~~~~~~~~~~~~~~~~~~~~
Enable heat transfer by activating the energy equation.

.. GENERATED FROM PYTHON SOURCE LINES 226-229

.. code-block:: Python


    solver.tui.define.models.energy("yes", ", ", ", ", ", ", ", ")








.. GENERATED FROM PYTHON SOURCE LINES 230-233

Create material
~~~~~~~~~~~~~~~
Create a material named ``"water-liquid"``.

.. GENERATED FROM PYTHON SOURCE LINES 233-236

.. code-block:: Python


    solver.tui.define.materials.copy("fluid", "water-liquid")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

 
 
    water-liquid copied from database.
    water-liquid copied from database.






.. GENERATED FROM PYTHON SOURCE LINES 237-241

Set up cell zone conditions
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set up the cell zone conditions for the fluid zone (``elbow-fluid``)``. Set the
material to ``"water-liquid"``.

.. GENERATED FROM PYTHON SOURCE LINES 241-268

.. code-block:: Python


    solver.tui.define.boundary_conditions.fluid(
        "elbow-fluid",
        "yes",
        "water-liquid",
        "no",
        "no",
        "no",
        "no",
        "0",
        "no",
        "0",
        "no",
        "0",
        "no",
        "0",
        "no",
        "0",
        "no",
        "1",
        "no",
        "no",
        "no",
        "no",
        "no",
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (elbow-fluid)
    (elbow-fluid)




.. GENERATED FROM PYTHON SOURCE LINES 269-273

Set up boundary conditions for CFD analysis
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set up the boundary conditions for the inlets, outlet, and walls for CFD
analysis.

.. GENERATED FROM PYTHON SOURCE LINES 273-299

.. code-block:: Python


    # cold inlet (cold-inlet), Setting: Value:
    # Velocity Specification Method: Magnitude, Normal to Boundary
    velocity_inlet = solver.tui.define.boundary_conditions.set.velocity_inlet
    velocity_inlet("cold-inlet", [], "vmag", "no", 0.4, "quit")
    velocity_inlet("cold-inlet", [], "ke-spec", "no", "no", "no", "yes", "quit")
    velocity_inlet("cold-inlet", [], "turb-intensity", 5, "quit")
    velocity_inlet("cold-inlet", [], "turb-hydraulic-diam", 4, "quit")
    velocity_inlet("cold-inlet", [], "temperature", "no", 293.15, "quit")

    # hot inlet (hot-inlet), Setting: Value:
    # Velocity Specification Method: Magnitude, Normal to Boundary

    velocity_inlet("hot-inlet", [], "vmag", "no", 1.2, "quit")
    velocity_inlet("hot-inlet", [], "ke-spec", "no", "no", "no", "yes", "quit")
    velocity_inlet("hot-inlet", [], "turb-intensity", 5, "quit")
    velocity_inlet("hot-inlet", [], "turb-hydraulic-diam", 1, "quit")
    velocity_inlet("hot-inlet", [], "temperature", "no", 313.15, "quit")

    # pressure outlet (outlet), Setting: Value:
    # Backflow Turbulent Intensity: 5 [%]
    # Backflow Turbulent Viscosity Ratio: 4
    pressure_outlet = solver.tui.define.boundary_conditions.set.pressure_outlet
    pressure_outlet("outlet", [], "turb-intensity", 5, "quit")
    pressure_outlet("outlet", [], "turb-viscosity-ratio", 4, "quit")








.. GENERATED FROM PYTHON SOURCE LINES 300-303

Enable plotting of residuals during calculation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Enable plotting of residuals during the calculation.

.. GENERATED FROM PYTHON SOURCE LINES 303-306

.. code-block:: Python


    solver.tui.solve.monitors.residual.plot("yes")








.. GENERATED FROM PYTHON SOURCE LINES 307-311

Create surface report definition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a surface report definition of the average temperature at the outlet
named ``"outlet-temp-avg"``.

.. GENERATED FROM PYTHON SOURCE LINES 311-323

.. code-block:: Python


    solver.tui.solve.report_definitions.add(
        "outlet-temp-avg",
        "surface-massavg",
        "field",
        "temperature",
        "surface-names",
        "outlet",
        "()",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 324-329

Create expression report definition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a report definition of single value expression type computing the difference
of area-averaged static pressure over cold-inlet and oulet. The name of the
report definition is ``"ave-pressure-diff"``.

.. GENERATED FROM PYTHON SOURCE LINES 329-338

.. code-block:: Python


    solver.tui.solve.report_definitions.add(
        "ave-pressure-diff",
        "single-val-expression",
        "define",
        "\"AreaAve(StaticPressure, ['cold-inlet'])-AreaAve(StaticPressure, ['outlet'])\"",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 339-342

Create convergence condition
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a convergence condition for ``outlet-temp-avg``.

.. GENERATED FROM PYTHON SOURCE LINES 342-383

.. code-block:: Python


    # - Set ``"add"`` to ``"con-outlet-temp-avg"``.
    # - Set ``"report-defs"`` to ``"outlet-temp-avg"``.
    # - Set ``"stop-criterion"`` to ``"1e-04"``.
    # - Set ``"initial-values-to-ignore"`` to ``"20"``.
    # - Set ``"previous-values-to-consider"`` to ``"15"``.
    # - Set ``"print?"``to ``"yes"``.
    # - Set ``"frequency"`` to ``"3"``.
    #
    # These settings cause Fluent to consider the solution converged when the
    # surface report definition value for each of the previous 15 iterations is
    # within 0.001% of the current value. Convergence of the values is checked
    # every 3 iterations. The first 20 iterations are ignored, allowing for any
    # initial solution dynamics to settle out. Note that the value printed to the
    # console is the deviation between the current and previous iteration values
    # only.

    solver.tui.solve.convergence_conditions(
        "conv-reports",
        "add",
        "con-outlet-temp-avg",
        "initial-values-to-ignore",
        "20",
        "previous-values-to-consider",
        "15",
        "print?",
        "yes",
        "report-defs",
        "outlet-temp-avg",
        "stop-criterion",
        "1e-04",
        "quit",
        "quit",
        "condition",
        "1",
        "frequency",
        "3",
        "quit",
    )
    solver.tui.solve.convergence_conditions("frequency", "3", "quit")








.. GENERATED FROM PYTHON SOURCE LINES 384-387

Initialize flow field
~~~~~~~~~~~~~~~~~~~~~
Initialize the flow field using hybrid initialization.

.. GENERATED FROM PYTHON SOURCE LINES 387-390

.. code-block:: Python


    solver.tui.solve.initialize.hyb_initialization()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none



    Initialize using the hybrid initialization method.

    Checking case topology... 
    Initialize using the hybrid initialization method.

    -This case has both inlets & outlets 
    -Pressure information is not available at the boundaries.
    Checking case topology... 
     Case will be initialized with constant pressure
    -This case has both inlets & outlets 
    -Pressure information is not available at the boundaries.
     Case will be initialized with constant pressure


            iter            scalar-0
            iter            scalar-0


            1               1.000000e+00
            1               1.000000e+00
            2               1.769498e-04
            2               1.769498e-04
            3               1.196573e-05
            3               1.196573e-05
            4               1.248343e-05
            4               1.248343e-05
            5               2.214466e-06
            5               2.214466e-06
            6               2.758681e-06
            6               2.758681e-06
            7               5.875560e-07
            7               5.875560e-07
            8               6.961090e-07
            8               6.961090e-07
            9               1.778312e-07
            9               1.778312e-07
            10              1.905637e-07
            10              1.905637e-07


    Hybrid initialization is done.
    Hybrid initialization is done.




.. GENERATED FROM PYTHON SOURCE LINES 391-394

Save case file
~~~~~~~~~~~~~~
Solve the case file (``mixing_elbow1.cas.h5``).

.. GENERATED FROM PYTHON SOURCE LINES 394-397

.. code-block:: Python


    solver.tui.file.write_case("mixing_elbow1.cas.h5")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fast-loading "/ansys_inc/v242/fluent/fluent24.2.0/addons/afd/lib/hdfio.bin"
    Fast-loading "/ansys_inc/v242/fluent/fluent24.2.0/addons/afd/lib/hdfio.bin"
    Done.
    Done.

    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow1.cas.h5" in NODE0 mode and compression level 1 ...

    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow1.cas.h5" in NODE0 mode and compression level 1 ...
    Grouping cells for Laplace smoothing ...
    Grouping cells for Laplace smoothing ...
           17279 cells,     1 zone  ...
           88336 faces,     7 zones ...
           59814 nodes,     1 zone  ...
      Done.
           17279 cells,     1 zone  ...
           88336 faces,     7 zones ...
           59814 nodes,     1 zone  ...
      Done.


      Writing boundary layer flags ...
      Writing boundary layer flags ...
      Done.
      Done.
    Done.
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 398-401

Solve for 100 iterations
~~~~~~~~~~~~~~~~~~~~~~~~
Solve for 100 iterations.

.. GENERATED FROM PYTHON SOURCE LINES 401-404

.. code-block:: Python


    solver.tui.solve.iterate(100)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none



      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
         1  1.0000e+00  1.2763e-03  1.3013e-03  8.4337e-04  4.8954e-05  1.3481e-02  2.1021e+02              0:00:24   99
         1  1.0000e+00  1.2763e-03  1.3013e-03  8.4337e-04  4.8954e-05  1.3481e-02  2.1021e+02              0:00:24   99
         2  1.0000e+00  3.8675e-03  4.5444e-03  1.9000e-03  1.1435e-04  1.4686e-01  1.3301e-01              0:00:25   98
         2  1.0000e+00  3.8675e-03  4.5444e-03  1.9000e-03  1.1435e-04  1.4686e-01  1.3301e-01              0:00:25   98
         3  7.6850e-01  2.3650e-03  3.4747e-03  1.2644e-03  1.2333e-04  7.1223e-02  9.8155e-02              0:00:25   97
         3  7.6850e-01  2.3650e-03  3.4747e-03  1.2644e-03  1.2333e-04  7.1223e-02  9.8155e-02              0:00:25   97
         4  6.6757e-01  1.4582e-03  2.7253e-03  7.7345e-04  1.3047e-04  4.3469e-02  7.1928e-02              0:00:24   96
         4  6.6757e-01  1.4582e-03  2.7253e-03  7.7345e-04  1.3047e-04  4.3469e-02  7.1928e-02              0:00:24   96
         5  5.1749e-01  1.1080e-03  2.3025e-03  5.7228e-04  1.3199e-04  3.5741e-02  5.3258e-02              0:00:24   95
         5  5.1749e-01  1.1080e-03  2.3025e-03  5.7228e-04  1.3199e-04  3.5741e-02  5.3258e-02              0:00:24   95
         6  3.9744e-01  9.5701e-04  2.0441e-03  4.6387e-04  1.2905e-04  3.0974e-02  3.9637e-02              0:00:23   94
         6  3.9744e-01  9.5701e-04  2.0441e-03  4.6387e-04  1.2905e-04  3.0974e-02  3.9637e-02              0:00:23   94
         7  3.0337e-01  8.5836e-04  1.8777e-03  4.0585e-04  1.2363e-04  2.6660e-02  3.0929e-02              0:00:23   93
         7  3.0337e-01  8.5836e-04  1.8777e-03  4.0585e-04  1.2363e-04  2.6660e-02  3.0929e-02              0:00:23   93
         8  2.4237e-01  7.8271e-04  1.7548e-03  3.6903e-04  1.1725e-04  2.3802e-02  2.5068e-02              0:00:24   92
         8  2.4237e-01  7.8271e-04  1.7548e-03  3.6903e-04  1.1725e-04  2.3802e-02  2.5068e-02              0:00:24   92
         9  2.0552e-01  7.3056e-04  1.6404e-03  3.4216e-04  1.0906e-04  2.2397e-02  2.0220e-02              0:00:24   91
         9  2.0552e-01  7.3056e-04  1.6404e-03  3.4216e-04  1.0906e-04  2.2397e-02  2.0220e-02              0:00:24   91
        10  1.8054e-01  6.8404e-04  1.5146e-03  3.1987e-04  9.9629e-05  2.2085e-02  1.6575e-02              0:00:24   90
        10  1.8054e-01  6.8404e-04  1.5146e-03  3.1987e-04  9.9629e-05  2.2085e-02  1.6575e-02              0:00:24   90
        11  1.6087e-01  6.3777e-04  1.3891e-03  2.9809e-04  8.9419e-05  2.2063e-02  1.4035e-02              0:00:24   89
        11  1.6087e-01  6.3777e-04  1.3891e-03  2.9809e-04  8.9419e-05  2.2063e-02  1.4035e-02              0:00:24   89


      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        12  1.4659e-01  5.9609e-04  1.2634e-03  2.7701e-04  7.8281e-05  2.2067e-02  1.2257e-02              0:00:24   88
        12  1.4659e-01  5.9609e-04  1.2634e-03  2.7701e-04  7.8281e-05  2.2067e-02  1.2257e-02              0:00:24   88
        13  1.3433e-01  5.6156e-04  1.1412e-03  2.5854e-04  6.6824e-05  2.1795e-02  1.0827e-02              0:00:24   87
        13  1.3433e-01  5.6156e-04  1.1412e-03  2.5854e-04  6.6824e-05  2.1795e-02  1.0827e-02              0:00:24   87
        14  1.2327e-01  5.2943e-04  1.0314e-03  2.4270e-04  5.6904e-05  2.1106e-02  9.5914e-03              0:00:23   86
        14  1.2327e-01  5.2943e-04  1.0314e-03  2.4270e-04  5.6904e-05  2.1106e-02  9.5914e-03              0:00:23   86
        15  1.1328e-01  4.9937e-04  9.3323e-04  2.2959e-04  4.9030e-05  2.0010e-02  8.4846e-03              0:00:22   85
        15  1.1328e-01  4.9937e-04  9.3323e-04  2.2959e-04  4.9030e-05  2.0010e-02  8.4846e-03              0:00:22   85
        16  1.0364e-01  4.7081e-04  8.4124e-04  2.1810e-04  4.3435e-05  1.8558e-02  7.4887e-03              0:00:22   84
        16  1.0364e-01  4.7081e-04  8.4124e-04  2.1810e-04  4.3435e-05  1.8558e-02  7.4887e-03              0:00:22   84
        17  9.5255e-02  4.4190e-04  7.5861e-04  2.0797e-04  3.9539e-05  1.6852e-02  6.5814e-03              0:00:21   83
        17  9.5255e-02  4.4190e-04  7.5861e-04  2.0797e-04  3.9539e-05  1.6852e-02  6.5814e-03              0:00:21   83
        18  8.8403e-02  4.1226e-04  6.8315e-04  1.9832e-04  3.6653e-05  1.5015e-02  5.7752e-03              0:00:21   82
        18  8.8403e-02  4.1226e-04  6.8315e-04  1.9832e-04  3.6653e-05  1.5015e-02  5.7752e-03              0:00:21   82
        19  8.2465e-02  3.8265e-04  6.2200e-04  1.8823e-04  3.3592e-05  1.3164e-02  5.0717e-03              0:00:21   81
        19  8.2465e-02  3.8265e-04  6.2200e-04  1.8823e-04  3.3592e-05  1.3164e-02  5.0717e-03              0:00:21   81
        20  7.6929e-02  3.5350e-04  5.7242e-04  1.7792e-04  3.0227e-05  1.1409e-02  4.4820e-03              0:00:20   80
        20  7.6929e-02  3.5350e-04  5.7242e-04  1.7792e-04  3.0227e-05  1.1409e-02  4.4820e-03              0:00:20   80
        21  7.1524e-02  3.2470e-04  5.3214e-04  1.6744e-04  2.6816e-05  9.7904e-03  3.9885e-03              0:00:20   79
        21  7.1524e-02  3.2470e-04  5.3214e-04  1.6744e-04  2.6816e-05  9.7904e-03  3.9885e-03              0:00:20   79
        22  6.6726e-02  2.9732e-04  5.0004e-04  1.5761e-04  2.3511e-05  8.3528e-03  3.5751e-03              0:00:21   78
        22  6.6726e-02  2.9732e-04  5.0004e-04  1.5761e-04  2.3511e-05  8.3528e-03  3.5751e-03              0:00:21   78


      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        23  6.2324e-02  2.7140e-04  4.7264e-04  1.4788e-04  2.0547e-05  7.1162e-03  3.2232e-03              0:00:21   77
        23  6.2324e-02  2.7140e-04  4.7264e-04  1.4788e-04  2.0547e-05  7.1162e-03  3.2232e-03              0:00:21   77
        24  5.8081e-02  2.4770e-04  4.5021e-04  1.3818e-04  1.7815e-05  6.0705e-03  2.9137e-03              0:00:21   76
        24  5.8081e-02  2.4770e-04  4.5021e-04  1.3818e-04  1.7815e-05  6.0705e-03  2.9137e-03              0:00:21   76
        25  5.3860e-02  2.2655e-04  4.2802e-04  1.2872e-04  1.5345e-05  5.2104e-03  2.6332e-03              0:00:21   75
        25  5.3860e-02  2.2655e-04  4.2802e-04  1.2872e-04  1.5345e-05  5.2104e-03  2.6332e-03              0:00:21   75
        26  4.9964e-02  2.0719e-04  4.0480e-04  1.1945e-04  1.3178e-05  4.5142e-03  2.3796e-03              0:00:20   74
        26  4.9964e-02  2.0719e-04  4.0480e-04  1.1945e-04  1.3178e-05  4.5142e-03  2.3796e-03              0:00:20   74
        27  4.6169e-02  1.8923e-04  3.7945e-04  1.1072e-04  1.1274e-05  3.9641e-03  2.1600e-03              0:00:20   73
        27  4.6169e-02  1.8923e-04  3.7945e-04  1.1072e-04  1.1274e-05  3.9641e-03  2.1600e-03              0:00:20   73
        28  4.2891e-02  1.7294e-04  3.5313e-04  1.0240e-04  9.6661e-06  3.5325e-03  1.9749e-03              0:00:20   72
        28  4.2891e-02  1.7294e-04  3.5313e-04  1.0240e-04  9.6661e-06  3.5325e-03  1.9749e-03              0:00:20   72
        29  3.9376e-02  1.5802e-04  3.2707e-04  9.4456e-05  8.3077e-06  3.1739e-03  1.8113e-03              0:00:20   71
        29  3.9376e-02  1.5802e-04  3.2707e-04  9.4456e-05  8.3077e-06  3.1739e-03  1.8113e-03              0:00:20   71
        30  3.6223e-02  1.4416e-04  3.0169e-04  8.6953e-05  7.1697e-06  2.8753e-03  1.6641e-03              0:00:20   70
        30  3.6223e-02  1.4416e-04  3.0169e-04  8.6953e-05  7.1697e-06  2.8753e-03  1.6641e-03              0:00:20   70
        31  3.3441e-02  1.3137e-04  2.7780e-04  8.0009e-05  6.2344e-06  2.6129e-03  1.5324e-03              0:00:20   69
        31  3.3441e-02  1.3137e-04  2.7780e-04  8.0009e-05  6.2344e-06  2.6129e-03  1.5324e-03              0:00:20   69
        32  3.0861e-02  1.1967e-04  2.5525e-04  7.3489e-05  5.4420e-06  2.3828e-03  1.4140e-03              0:00:19   68
        32  3.0861e-02  1.1967e-04  2.5525e-04  7.3489e-05  5.4420e-06  2.3828e-03  1.4140e-03              0:00:19   68
        33  2.8355e-02  1.0914e-04  2.3407e-04  6.7316e-05  4.7869e-06  2.1746e-03  1.3096e-03              0:00:19   67
        33  2.8355e-02  1.0914e-04  2.3407e-04  6.7316e-05  4.7869e-06  2.1746e-03  1.3096e-03              0:00:19   67

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter

      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        34  2.6196e-02  9.9536e-05  2.1413e-04  6.1645e-05  4.2375e-06  1.9811e-03  1.2150e-03              0:00:19   66
        34  2.6196e-02  9.9536e-05  2.1413e-04  6.1645e-05  4.2375e-06  1.9811e-03  1.2150e-03              0:00:19   66
        35  2.4177e-02  9.0706e-05  1.9559e-04  5.6444e-05  3.7685e-06  1.8018e-03  1.1277e-03              0:00:19   65
        35  2.4177e-02  9.0706e-05  1.9559e-04  5.6444e-05  3.7685e-06  1.8018e-03  1.1277e-03              0:00:19   65
        36  2.2353e-02  8.2560e-05  1.7885e-04  5.1666e-05  3.3756e-06  1.6381e-03  1.0450e-03  2.0888e-03  0:00:18   64
        36  2.2353e-02  8.2560e-05  1.7885e-04  5.1666e-05  3.3756e-06  1.6381e-03  1.0450e-03  2.0888e-03  0:00:18   64
        37  2.0644e-02  7.5106e-05  1.6368e-04  4.7245e-05  3.0499e-06  1.4870e-03  9.6730e-04              0:00:18   63
        37  2.0644e-02  7.5106e-05  1.6368e-04  4.7245e-05  3.0499e-06  1.4870e-03  9.6730e-04              0:00:18   63
        38  1.9009e-02  6.8338e-05  1.4981e-04  4.3217e-05  2.7783e-06  1.3455e-03  8.9363e-04              0:00:18   62
        38  1.9009e-02  6.8338e-05  1.4981e-04  4.3217e-05  2.7783e-06  1.3455e-03  8.9363e-04              0:00:18   62
        39  1.7579e-02  6.2116e-05  1.3703e-04  3.9543e-05  2.5494e-06  1.2138e-03  8.2376e-04  1.2611e-03  0:00:17   61
        39  1.7579e-02  6.2116e-05  1.3703e-04  3.9543e-05  2.5494e-06  1.2138e-03  8.2376e-04  1.2611e-03  0:00:17   61
        40  1.6269e-02  5.6390e-05  1.2544e-04  3.6208e-05  2.3492e-06  1.0931e-03  7.5712e-04              0:00:17   60
        40  1.6269e-02  5.6390e-05  1.2544e-04  3.6208e-05  2.3492e-06  1.0931e-03  7.5712e-04              0:00:17   60
        41  1.5026e-02  5.1160e-05  1.1474e-04  3.3189e-05  2.1711e-06  9.8210e-04  6.9381e-04              0:00:17   59
        41  1.5026e-02  5.1160e-05  1.1474e-04  3.3189e-05  2.1711e-06  9.8210e-04  6.9381e-04              0:00:17   59
        42  1.3899e-02  4.6406e-05  1.0505e-04  3.0479e-05  2.0083e-06  8.8106e-04  6.3435e-04  7.8048e-04  0:00:16   58
        42  1.3899e-02  4.6406e-05  1.0505e-04  3.0479e-05  2.0083e-06  8.8106e-04  6.3435e-04  7.8048e-04  0:00:16   58
        43  1.2846e-02  4.2095e-05  9.6230e-05  2.7971e-05  1.8548e-06  7.9025e-04  5.7875e-04              0:00:16   57
        43  1.2846e-02  4.2095e-05  9.6230e-05  2.7971e-05  1.8548e-06  7.9025e-04  5.7875e-04              0:00:16   57
        44  1.1852e-02  3.8213e-05  8.8089e-05  2.5668e-05  1.7092e-06  7.0778e-04  5.2694e-04              0:00:16   56
        44  1.1852e-02  3.8213e-05  8.8089e-05  2.5668e-05  1.7092e-06  7.0778e-04  5.2694e-04              0:00:16   56


      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        45  1.0878e-02  3.4651e-05  8.0512e-05  2.3554e-05  1.5709e-06  6.3377e-04  4.7859e-04  4.8459e-04  0:00:16   55
        45  1.0878e-02  3.4651e-05  8.0512e-05  2.3554e-05  1.5709e-06  6.3377e-04  4.7859e-04  4.8459e-04  0:00:16   55
        46  9.9825e-03  3.1422e-05  7.3481e-05  2.1595e-05  1.4391e-06  5.6827e-04  4.3419e-04              0:00:16   54
        46  9.9825e-03  3.1422e-05  7.3481e-05  2.1595e-05  1.4391e-06  5.6827e-04  4.3419e-04              0:00:16   54
        47  9.1367e-03  2.8481e-05  6.7174e-05  1.9802e-05  1.3136e-06  5.1064e-04  3.9251e-04              0:00:16   53
        47  9.1367e-03  2.8481e-05  6.7174e-05  1.9802e-05  1.3136e-06  5.1064e-04  3.9251e-04              0:00:16   53
        48  8.3784e-03  2.5827e-05  6.1432e-05  1.8147e-05  1.1957e-06  4.5955e-04  3.5382e-04  2.8642e-04  0:00:16   52
        48  8.3784e-03  2.5827e-05  6.1432e-05  1.8147e-05  1.1957e-06  4.5955e-04  3.5382e-04  2.8642e-04  0:00:16   52
        49  7.6715e-03  2.3442e-05  5.6141e-05  1.6616e-05  1.0849e-06  4.1439e-04  3.1826e-04              0:00:15   51
        49  7.6715e-03  2.3442e-05  5.6141e-05  1.6616e-05  1.0849e-06  4.1439e-04  3.1826e-04              0:00:15   51
        50  7.0341e-03  2.1257e-05  5.1183e-05  1.5207e-05  9.8183e-07  3.7378e-04  2.8581e-04              0:00:15   50
        50  7.0341e-03  2.1257e-05  5.1183e-05  1.5207e-05  9.8183e-07  3.7378e-04  2.8581e-04              0:00:15   50
        51  6.4473e-03  1.9268e-05  4.6483e-05  1.3904e-05  8.8560e-07  3.3675e-04  2.5623e-04  1.5665e-04  0:00:15   49
        51  6.4473e-03  1.9268e-05  4.6483e-05  1.3904e-05  8.8560e-07  3.3675e-04  2.5623e-04  1.5665e-04  0:00:15   49
        52  5.9010e-03  1.7467e-05  4.2173e-05  1.2700e-05  7.9654e-07  3.0318e-04  2.2934e-04              0:00:15   48
        52  5.9010e-03  1.7467e-05  4.2173e-05  1.2700e-05  7.9654e-07  3.0318e-04  2.2934e-04              0:00:15   48
        53  5.3932e-03  1.5822e-05  3.8200e-05  1.1595e-05  7.1504e-07  2.7289e-04  2.0502e-04              0:00:14   47
        53  5.3932e-03  1.5822e-05  3.8200e-05  1.1595e-05  7.1504e-07  2.7289e-04  2.0502e-04              0:00:14   47
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
        54  4.9169e-03  1.4314e-05  3.4514e-05  1.0580e-05  6.4128e-07  2.4569e-04  1.8310e-04  7.7134e-05  0:00:14   46
        54  4.9169e-03  1.4314e-05  3.4514e-05  1.0580e-05  6.4128e-07  2.4569e-04  1.8310e-04  7.7134e-05  0:00:14   46
        55  4.4752e-03  1.2941e-05  3.1142e-05  9.6471e-06  5.7440e-07  2.2078e-04  1.6329e-04              0:00:14   45
        55  4.4752e-03  1.2941e-05  3.1142e-05  9.6471e-06  5.7440e-07  2.2078e-04  1.6329e-04              0:00:14   45


      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        56  4.0686e-03  1.1685e-05  2.8082e-05  8.7923e-06  5.1388e-07  1.9854e-04  1.4559e-04              0:00:14   44
        56  4.0686e-03  1.1685e-05  2.8082e-05  8.7923e-06  5.1388e-07  1.9854e-04  1.4559e-04              0:00:14   44
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
        57  3.7014e-03  1.0543e-05  2.5309e-05  8.0079e-06  4.5857e-07  1.7842e-04  1.2980e-04  3.1120e-05  0:00:13   43
        57  3.7014e-03  1.0543e-05  2.5309e-05  8.0079e-06  4.5857e-07  1.7842e-04  1.2980e-04  3.1120e-05  0:00:13   43
        58  3.3627e-03  9.5053e-06  2.2798e-05  7.2896e-06  4.0906e-07  1.6023e-04  1.1572e-04              0:00:13   42
        58  3.3627e-03  9.5053e-06  2.2798e-05  7.2896e-06  4.0906e-07  1.6023e-04  1.1572e-04              0:00:13   42
        59  3.0564e-03  8.5719e-06  2.0524e-05  6.6298e-06  3.6458e-07  1.4379e-04  1.0323e-04              0:00:17   41
        59  3.0564e-03  8.5719e-06  2.0524e-05  6.6298e-06  3.6458e-07  1.4379e-04  1.0323e-04              0:00:17   41
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
        60  2.7768e-03  7.7251e-06  1.8461e-05  6.0248e-06  3.2453e-07  1.2878e-04  9.2074e-05  7.0047e-06  0:00:16   40
        60  2.7768e-03  7.7251e-06  1.8461e-05  6.0248e-06  3.2453e-07  1.2878e-04  9.2074e-05  7.0047e-06  0:00:16   40
        61  2.5187e-03  6.9549e-06  1.6606e-05  5.4720e-06  2.8863e-07  1.1508e-04  8.2084e-05              0:00:15   39
        61  2.5187e-03  6.9549e-06  1.6606e-05  5.4720e-06  2.8863e-07  1.1508e-04  8.2084e-05              0:00:15   39
        62  2.2827e-03  6.2650e-06  1.4941e-05  4.9669e-06  2.5647e-07  1.0280e-04  7.3149e-05              0:00:14   38
        62  2.2827e-03  6.2650e-06  1.4941e-05  4.9669e-06  2.5647e-07  1.0280e-04  7.3149e-05              0:00:14   38
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
        63  2.0638e-03  5.6420e-06  1.3442e-05  4.5058e-06  2.2769e-07  9.1764e-05  6.5191e-05  5.8464e-06  0:00:13   37
        63  2.0638e-03  5.6420e-06  1.3442e-05  4.5058e-06  2.2769e-07  9.1764e-05  6.5191e-05  5.8464e-06  0:00:13   37
        64  1.8626e-03  5.0807e-06  1.2092e-05  4.0842e-06  2.0199e-07  8.1861e-05  5.8092e-05              0:00:12   36
        64  1.8626e-03  5.0807e-06  1.2092e-05  4.0842e-06  2.0199e-07  8.1861e-05  5.8092e-05              0:00:12   36
        65  1.6803e-03  4.5743e-06  1.0878e-05  3.6971e-06  1.7891e-07  7.3004e-05  5.1760e-05              0:00:13   35
        65  1.6803e-03  4.5743e-06  1.0878e-05  3.6971e-06  1.7891e-07  7.3004e-05  5.1760e-05              0:00:13   35
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
        66  1.5135e-03  4.1174e-06  9.7831e-06  3.3419e-06  1.5826e-07  6.5088e-05  4.6100e-05  6.4481e-06  0:00:12   34
        66  1.5135e-03  4.1174e-06  9.7831e-06  3.3419e-06  1.5826e-07  6.5088e-05  4.6100e-05  6.4481e-06  0:00:12   34


      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
      iter  continuity  x-velocity  y-velocity  z-velocity      energy           k       omega  con-outlet     time/iter
        67  1.3619e-03  3.7086e-06  8.7908e-06  3.0177e-06  1.3971e-07  5.7983e-05  4.1039e-05              0:00:11   33
        67  1.3619e-03  3.7086e-06  8.7908e-06  3.0177e-06  1.3971e-07  5.7983e-05  4.1039e-05              0:00:11   33
        68  1.2253e-03  3.3391e-06  7.8953e-06  2.7216e-06  1.2311e-07  5.1612e-05  3.6513e-05              0:00:10   32
        68  1.2253e-03  3.3391e-06  7.8953e-06  2.7216e-06  1.2311e-07  5.1612e-05  3.6513e-05              0:00:10   32
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
        69  1.1009e-03  3.0062e-06  7.0831e-06  2.4514e-06  1.0825e-07  4.5904e-05  3.2472e-05  5.6988e-06  0:00:10   31
        69  1.1009e-03  3.0062e-06  7.0831e-06  2.4514e-06  1.0825e-07  4.5904e-05  3.2472e-05  5.6988e-06  0:00:10   31
        70  9.8848e-04  2.7060e-06  6.3494e-06  2.2060e-06  9.5050e-08  4.0803e-05  2.8865e-05              0:00:09   30
        70  9.8848e-04  2.7060e-06  6.3494e-06  2.2060e-06  9.5050e-08  4.0803e-05  2.8865e-05              0:00:09   30
    !   70 solution is converged
    !   70 solution is converged
        71  8.8713e-04  2.4343e-06  5.6866e-06  1.9830e-06  8.3290e-08  3.6248e-05  2.5638e-05              0:00:09   29
        71  8.8713e-04  2.4343e-06  5.6866e-06  1.9830e-06  8.3290e-08  3.6248e-05  2.5638e-05              0:00:09   29
    Solution for report definition outlet-temp-avg has converged
    Solution for report definition outlet-temp-avg has converged
    !   72 report definition solution is converged
    !   72 report definition solution is converged
        72  7.9578e-04  2.1886e-06  5.0886e-06  1.7800e-06  7.2815e-08  3.2187e-05  2.2751e-05  3.8556e-06  0:00:08   28
        72  7.9578e-04  2.1886e-06  5.0886e-06  1.7800e-06  7.2815e-08  3.2187e-05  2.2751e-05  3.8556e-06  0:00:08   28
    !   72 solution is converged
    !   72 solution is converged




.. GENERATED FROM PYTHON SOURCE LINES 405-408

.. image:: /_static/mixing_elbow_012.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 410-413

.. image:: /_static/mixing_elbow_013.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 415-418

Save data file
~~~~~~~~~~~~~~
Save the data file (``mixing_elbow1.dat.h5``).

.. GENERATED FROM PYTHON SOURCE LINES 418-421

.. code-block:: Python


    solver.tui.file.write_data("mixing_elbow1.dat.h5")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow1.dat.h5" in NODE0 mode and compression level 1 ...

    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow1.dat.h5" in NODE0 mode and compression level 1 ...
      Writing results.
      Writing results.
    Done.
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 422-427

Configure graphics picture export
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Since Fluent is being run without the GUI, we will need to export plots as
picture files. Edit the picture settings to use a custom resolution so that
the images are large enough.

.. GENERATED FROM PYTHON SOURCE LINES 427-435

.. code-block:: Python


    picture = solver.tui.display.set.picture
    # use-window-container TUI option not available inside containers or Ansys Lab environment
    if "use_window_resolution" in dir(picture):
        picture.use_window_resolution("no")
    picture.x_resolution("1920")
    picture.y_resolution("1440")








.. GENERATED FROM PYTHON SOURCE LINES 436-445

Create definition for velocity magnitude contours
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create and display a definition for the velocity magnitude contours on the
symmetry plane. Then display it and export the image for inspection.

- Set ``"contour"`` to ``"contour-vel"``.
- Set ``"field"`` to ``"velocity-magnitude"``.
- Set ``"surfaces-list"`` to ``"symmetry-xyplane"``.
- Set ``"display"`` to ``"contour-vel contour"``.

.. GENERATED FROM PYTHON SOURCE LINES 445-470

.. code-block:: Python


    solver.tui.display.objects.create(
        "contour",
        "contour-vel",
        "filled?",
        "yes",
        "node-values?",
        "yes",
        "field",
        "velocity-magnitude",
        "surfaces-list",
        "symmetry-xyplane",
        "()",
        "coloring",
        "banded",
        "quit",
    )

    solver.tui.display.objects.display("contour-vel")

    views = solver.tui.display.views
    views.restore_view("front")
    views.auto_scale()
    solver.tui.display.save_picture("contour-vel.png")








.. GENERATED FROM PYTHON SOURCE LINES 471-474

.. image:: /_static/mixing_elbow_014.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 476-485

Create definition for temperature contours
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create and display a definition for temperature contours on the symmetry
plane. Then display it and export the image for inspection.

- Set ``"contour"`` to ``"contour-temp"``.
- Set ``"field"`` to ``"temperature"``.
- Set ``"surfaces-list"`` to ``"symmetry-xyplane"``.
- Set ``"display"`` to ``"contour-temp contour"``.

.. GENERATED FROM PYTHON SOURCE LINES 485-510

.. code-block:: Python


    solver.tui.display.objects.create(
        "contour",
        "contour-temp",
        "filled?",
        "yes",
        "node-values?",
        "yes",
        "field",
        "temperature",
        "surfaces-list",
        "symmetry-xyplane",
        "()",
        "coloring",
        "smooth",
        "quit",
    )

    solver.tui.display.objects.display("contour-temp")

    views = solver.tui.display.views
    views.restore_view("front")
    views.auto_scale()
    solver.tui.display.save_picture("contour-temp.png")








.. GENERATED FROM PYTHON SOURCE LINES 511-514

.. image:: /_static/mixing_elbow_015.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 516-526

Create velocity vectors
~~~~~~~~~~~~~~~~~~~~~~~
Create and display velocity vectors on the symmetry-xyplane plane. Then
display it and export the image for inspection.

- Set ``"vector"`` to ``"vector-vel"``.
- Set ``"style"`` to ``"arrow"``.
- Set ``"surface-list"`` to ``"symmetry-xyplane"``.
- Set ``"scale"`` to ``"4"``.
- Set ``"skip"`` to ``"2"``.

.. GENERATED FROM PYTHON SOURCE LINES 526-551

.. code-block:: Python


    solver.tui.display.objects.create(
        "vector",
        "vector-vel",
        "style",
        "arrow",
        "surface-list",
        "symmetry-xyplane",
        "()",
        "scale",
        "scale-f",
        "4",
        "quit",
        "skip",
        "2",
        "quit",
    )

    solver.tui.display.objects.display("vector-vel")

    views = solver.tui.display.views
    views.restore_view("front")
    views.auto_scale()
    solver.tui.display.save_picture("vector-vel.png")








.. GENERATED FROM PYTHON SOURCE LINES 552-555

.. image:: /_static/mixing_elbow_tui_016.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 557-561

Create iso-surface
~~~~~~~~~~~~~~~~~~
Create an iso-surface representing the intersection of the plane z=0 and the
surface outlet. Name it ``"z=0_outlet"``.

.. GENERATED FROM PYTHON SOURCE LINES 561-566

.. code-block:: Python


    solver.tui.surface.iso_surface(
        "z-coordinate", "z=0_outlet", "outlet", "()", "()", "0", "()"
    )








.. GENERATED FROM PYTHON SOURCE LINES 567-571

Display and save XY plot
~~~~~~~~~~~~~~~~~~~~~~~~~
Display and save an XY plot of the temperature profile across the centerline
of the outlet for the initial solution.

.. GENERATED FROM PYTHON SOURCE LINES 571-583

.. code-block:: Python


    solver.tui.display.objects.create(
        "xy",
        "xy-outlet-temp",
        "y-axis-function",
        "temperature",
        "surfaces-list",
        "z=0_outlet",
        "()",
        "quit",
    )








.. GENERATED FROM PYTHON SOURCE LINES 584-587

.. image:: /_static/mixing_elbow_017.png
  :width: 500pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 589-592

Write final case file and data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write the final case file and the data.

.. GENERATED FROM PYTHON SOURCE LINES 592-595

.. code-block:: Python


    solver.tui.file.write_case_data("mixing_elbow2_tui.cas.h5")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow2_tui.cas.h5" in NODE0 mode and compression level 1 ...

    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow2_tui.cas.h5" in NODE0 mode and compression level 1 ...
    Grouping cells for Laplace smoothing ...
    Grouping cells for Laplace smoothing ...
           17279 cells,     1 zone  ...
           88336 faces,     7 zones ...
           59814 nodes,     1 zone  ...
      Done.
           17279 cells,     1 zone  ...
           88336 faces,     7 zones ...
           59814 nodes,     1 zone  ...
      Done.


      Writing boundary layer flags ...
      Writing boundary layer flags ...
      Done.
      Done.
    Done.
    Done.


    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow2_tui.dat.h5" in NODE0 mode and compression level 1 ...
    Writing to 1f800dbb1892:"/mnt/pyfluent/mixing_elbow2_tui.dat.h5" in NODE0 mode and compression level 1 ...
      Writing results.
      Writing results.
    Done.
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 596-599

Close Fluent
~~~~~~~~~~~~
Close Fluent.

.. GENERATED FROM PYTHON SOURCE LINES 599-602

.. code-block:: Python


    solver.exit()









.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (3 minutes 0.047 seconds)


.. _sphx_glr_download_examples_00-fluent_mixing_elbow.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mixing_elbow.ipynb <mixing_elbow.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mixing_elbow.py <mixing_elbow.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
